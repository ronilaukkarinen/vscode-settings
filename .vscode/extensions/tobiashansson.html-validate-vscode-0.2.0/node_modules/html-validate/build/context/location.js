"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function sliceSize(size, begin, end) {
    if (typeof size !== "number") {
        return size;
    }
    if (typeof end !== "number") {
        return size - begin;
    }
    if (end < 0) {
        end = size + end;
    }
    return Math.min(size, end - begin);
}
/**
 * Calculate a new location by offsetting this location.
 *
 * It is assumed there is no newlines anywhere between current location and
 * the new.
 *
 * @param location Source location
 * @param begin - Start location. Default is 0.
 * @param end - End location. Default is size of location. Negative values are
 * counted from end, e.g. `-2` means `size - 2`.
 */
function sliceLocation(location, begin, end) {
    if (!location)
        return null;
    const size = sliceSize(location.size, begin, end);
    return {
        filename: location.filename,
        offset: location.offset + begin,
        line: location.line,
        column: location.column + begin,
        size,
    };
}
exports.sliceLocation = sliceLocation;
