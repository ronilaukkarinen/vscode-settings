"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const expect = require("chai").expect;
const CodyMusic = __importStar(require("../../index"));
const models_1 = require("../../lib/models");
const util_1 = require("../util");
const util_2 = require("../../lib/util");
const moment = require("moment-timezone");
const musicUtil = new util_2.MusicUtil();
const testUtil = new util_1.TestUtil();
/**
 * Don't add "async" into the it condition.
 * i.e. it("description text", async (done) => {
 *     // do stuff
 * });
 * It will return the following error if you do.
 * "Error: Resolution method is overspecified. Specify a callback *or* return a Promise; not both."
 */
describe("recently playing tracks tests", () => {
    before(async () => {
        let configFile = __dirname + "/../config.json";
        let data = testUtil.getJsonFromFile(configFile);
        CodyMusic.setCredentials({
            refreshToken: data.myRefreshToken,
            clientSecret: data.clientSecret,
            clientId: data.clientId,
            accessToken: data.myAccessToken,
        });
        await CodyMusic.launchPlayer(models_1.PlayerName.SpotifyDesktop);
        musicUtil.sleep(1500);
    });
    beforeEach(() => {
        //
    });
    it("Mute volume", async () => {
        await CodyMusic.mute(models_1.PlayerName.SpotifyWeb);
    });
    it("Unmute volume", async () => {
        await CodyMusic.unMute(models_1.PlayerName.SpotifyWeb);
    });
});
