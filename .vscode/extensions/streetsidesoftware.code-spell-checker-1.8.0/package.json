{
	"name": "code-spell-checker",
	"description": "Spelling checker for source code",
	"displayName": "Code Spell Checker",
	"icon": "images/SpellCheck.png",
	"author": "Jason Dent",
	"license": "MIT",
	"version": "1.8.0",
	"publisher": "streetsidesoftware",
	"repository": {
		"type": "git",
		"url": "https://github.com/streetsidesoftware/vscode-spell-checker"
	},
	"bugs": {
		"url": "https://github.com/streetsidesoftware/vscode-spell-checker/issues"
	},
	"homepage": "https://github.com/streetsidesoftware/vscode-spell-checker/blob/master/packages/client/README.md",
	"engines": {
		"vscode": "^1.42.0"
	},
	"extensionKind": [
		"workspace"
	],
	"enableProposedApi": false,
	"categories": [
		"Linters",
		"Other"
	],
	"keywords": [
		"spell",
		"checker",
		"spellchecker",
		"multi-root ready"
	],
	"qna": "marketplace",
	"activationEvents": [
		"*"
	],
	"main": "./dist/extension",
	"contributes": {
		"menus": {
			"editor/context": [
				{
					"command": "cSpell.addWordToUserDictionary",
					"when": "editorTextFocus && config.cSpell.showCommandsInEditorContextMenu",
					"group": "A_cspell"
				},
				{
					"command": "cSpell.addWordToWorkspaceDictionary",
					"when": "editorTextFocus && config.cSpell.showCommandsInEditorContextMenu && workspaceFolderCount != 0 && workspaceFolderCount != 1",
					"group": "A_cspell"
				},
				{
					"command": "cSpell.addWordToDictionary",
					"when": "editorTextFocus && config.cSpell.showCommandsInEditorContextMenu && workspaceFolderCount != 0",
					"group": "A_cspell"
				},
				{
					"command": "cSpell.addIgnoreWord",
					"when": "editorTextFocus && config.cSpell.showCommandsInEditorContextMenu",
					"group": "A_cspell"
				}
			]
		},
		"commands": [
			{
				"command": "cSpell.addWordToWorkspaceDictionary",
				"title": "Add Word to Workspace Dictionary"
			},
			{
				"command": "cSpell.addWordToDictionary",
				"title": "Add Word to Folder Dictionary"
			},
			{
				"command": "cSpell.addWordToUserDictionary",
				"title": "Add Word to User Dictionary"
			},
			{
				"command": "cSpell.enableForWorkspace",
				"title": "Enable Spell Checking For Workspace"
			},
			{
				"command": "cSpell.disableForWorkspace",
				"title": "Disable Spell Checking For Workspace"
			},
			{
				"command": "cSpell.enableCurrentLanguage",
				"title": "Enable Spell Checking Document Language"
			},
			{
				"command": "cSpell.disableCurrentLanguage",
				"title": "Disable Spell Checking Document Language"
			},
			{
				"command": "cSpell.displayCSpellInfo",
				"title": "Show Spell Checker Configuration Info"
			},
			{
				"command": "cSpell.toggleEnableSpellChecker",
				"title": "Toggle Spell Checking For the Current Workspace"
			},
			{
				"command": "cSpell.removeWordFromFolderDictionary",
				"title": "Remove Words from the Folder Dictionary"
			},
			{
				"command": "cSpell.removeWordFromWorkspaceDictionary",
				"title": "Remove Words from the Workspace Dictionary"
			},
			{
				"command": "cSpell.removeWordFromUserDictionary",
				"title": "Remove Words from the Global Dictionary"
			},
			{
				"command": "cSpell.logPerfTimeline",
				"title": "Log cSpell performance times to console"
			},
			{
				"command": "cSpell.addIgnoreWord",
				"title": "Ignore Word"
			},
			{
				"command": "cSpell.addIgnoreWordToFolder",
				"title": "Ignore Word in Folder Settings"
			},
			{
				"command": "cSpell.addIgnoreWordToWorkspace",
				"title": "Ignore Word in Workspace Settings"
			},
			{
				"command": "cSpell.addIgnoreWordToUser",
				"title": "Ignore Word in User Settings"
			}
		],
		"languages": [
			{
				"id": "jsonc",
				"extensions": [
					"cspell-ext.json",
					"cspell-default.json",
					"cspell.json",
					"cSpell.json"
				]
			}
		],
		"jsonValidation": [
			{
				"fileMatch": "cSpell.json",
				"url": "https://raw.githubusercontent.com/streetsidesoftware/cspell/cspell%404.0.53/cspell.schema.json"
			},
			{
				"fileMatch": "cspell*.json",
				"url": "https://raw.githubusercontent.com/streetsidesoftware/cspell/cspell%404.0.53/cspell.schema.json"
			}
		],
		"configuration": {
			"type": "object",
			"title": "Code Spell Checker",
			"properties": {
				"cSpell.language": {
					"type": "string",
					"scope": "resource",
					"default": "en",
					"description": "The Language locale to use when spell checking. \"en\" and \"en-GB\" are currently supported."
				},
				"cSpell.maxNumberOfProblems": {
					"type": "number",
					"scope": "resource",
					"default": 100,
					"description": "Controls the maximum number of spelling errors per document."
				},
				"cSpell.checkLimit": {
					"type": "number",
					"scope": "resource",
					"default": 500,
					"description": "The limit in K-Bytes to be checked in a file."
				},
				"cSpell.numSuggestions": {
					"type": "number",
					"scope": "resource",
					"default": 8,
					"description": "Controls the number of suggestions shown."
				},
				"cSpell.minWordLength": {
					"type": "number",
					"scope": "resource",
					"default": 4,
					"description": "The minimum length of a word before checking it against a dictionary."
				},
				"cSpell.maxDuplicateProblems": {
					"type": "number",
					"scope": "resource",
					"default": 5,
					"description": "The maximum number of times the same word can be flagged as an error in a file."
				},
				"cSpell.enableFiletypes": {
					"items": {
						"type": "string"
					},
					"markdownDescription": "Enable / Disable checking file types (languageIds).\nThese are in additional to the file types specified by `cSpell.enabledLanguageIds`.\nTo disable a language, prefix with `!` as in `!json`,\n\nExample:\n```\njsonc       // enable checking for jsonc\n!json       // disable checking for json\nkotlin      // enable checking for kotlin\n```",
					"pattern": "^!?[\\w_\\-]+$",
					"scope": "resource",
					"title": "File Types to Check",
					"type": "array",
					"uniqueItems": true
				},
				"cSpell.enabledLanguageIds": {
					"title": "Enabled Language Ids",
					"type": "array",
					"scope": "resource",
					"items": {
						"type": "string"
					},
					"default": [
						"asciidoc",
						"c",
						"cpp",
						"csharp",
						"css",
						"git-commit",
						"go",
						"handlebars",
						"haskell",
						"html",
						"jade",
						"java",
						"javascript",
						"javascriptreact",
						"json",
						"jsonc",
						"latex",
						"less",
						"markdown",
						"php",
						"plaintext",
						"python",
						"pug",
						"restructuredtext",
						"rust",
						"scala",
						"scss",
						"text",
						"typescript",
						"typescriptreact",
						"yaml",
						"yml"
					],
					"deprecationMessage": "Deprecated, use `cSpell.enableFiletypes` to Enable / Disable checking files types.",
					"description": "Specify file types to spell check.",
					"uniqueItems": true
				},
				"cSpell.import": {
					"type": "array",
					"scope": "resource",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "List of paths of cspell.json files to import."
				},
				"cSpell.words": {
					"type": "array",
					"scope": "resource",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "Words to add to dictionary for a workspace."
				},
				"cSpell.userWords": {
					"type": "array",
					"scope": "resource",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "User words to add to dictionary.  Should only be in the user settings."
				},
				"cSpell.ignoreWords": {
					"type": "array",
					"scope": "resource",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "A list of words to be ignored by the spell checker."
				},
				"cSpell.enabled": {
					"type": "boolean",
					"scope": "resource",
					"default": true,
					"description": "Enable / Disable the spell checker."
				},
				"cSpell.diagnosticLevel": {
					"type": "string",
					"scope": "resource",
					"enum": [
						"Error",
						"Warning",
						"Information",
						"Hint"
					],
					"default": "Information",
					"description": "Issues found by the spell checker are marked with a Diagnostic Severity Level. This affects the color of squiggle."
				},
				"cSpell.showStatus": {
					"type": "boolean",
					"scope": "resource",
					"default": true,
					"description": "Display the spell checker status on the status bar."
				},
				"cSpell.spellCheckDelayMs": {
					"type": "number",
					"default": 50,
					"description": "Delay in ms after a document has changed before checking it for spelling errors."
				},
				"cSpell.ignorePaths": {
					"type": "array",
					"scope": "resource",
					"items": {
						"type": "string"
					},
					"default": [
						"**/package-lock.json",
						"**/node_modules/**",
						"**/vscode-extension/**",
						"**/.git/objects/**",
						".vscode"
					],
					"description": "Specify paths/files to ignore. (Supports Globs)"
				},
				"cSpell.flagWords": {
					"type": "array",
					"scope": "resource",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "Words to always be flagged as an error."
				},
				"cSpell.patterns": {
					"type": "array",
					"scope": "resource",
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "The pattern identifier."
							},
							"pattern": {
								"type": "string",
								"description": "Regular expression, default flags are: 'gim'"
							}
						},
						"description": "Define a pattern"
					},
					"default": [],
					"description": "Defines a list of named regular expression patterns that can be used in exclusion or inclusion lists."
				},
				"cSpell.ignoreRegExpList": {
					"type": "array",
					"scope": "resource",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "List of regular expressions used to exclude the matching text from being checked.\n Example: \"0x[a-f0-9]+\" to skip 0x hex values.\n By default the flags are 'gim'.\n You can specify them like this:\n \"/0x[A-F0-9]/g\" to match only upper case hex numbers.\n Example to match email: \"<?[\\\\w.\\\\-+]+@\\\\w+(\\\\.\\\\w+)+>?\" "
				},
				"cSpell.includeRegExpList": {
					"type": "array",
					"scope": "resource",
					"items": {
						"type": "string"
					},
					"default": [],
					"description": "List of regular expressions used to include text to be spell checked.\nBy default, all text is checked.  Adding regular expresses to this list will limit the text to be spell checked to only text that matches any of the expressions in the list.\nLogic: text to be checked = include - exclude\nNote: Slashes need to be double: \\\\ because it is in a json string. \nExamples:\n* \".*\" -- include everything.\n* \"'(?:[^'\\\\n]|\\\\\\\\')*'\" -- single quote strings. \n"
				},
				"cSpell.allowCompoundWords": {
					"type": "boolean",
					"scope": "resource",
					"default": false,
					"description": "Enable / Disable allowing word compounds. true means 'arraylength' would be ok, false means it would not pass."
				},
				"cSpell.languageSettings": {
					"type": "array",
					"scope": "resource",
					"description": "Define settings on a per programming language basis.",
					"items": {
						"$ref": "https://raw.githubusercontent.com/streetsidesoftware/cspell/cspell%404.0.53/cspell.schema.json#/definitions/LanguageSetting"
					}
				},
				"cSpell.dictionaries": {
					"type": "array",
					"scope": "resource",
					"description": "List of dictionaries to use when checking files.",
					"items": {
						"type": "string",
						"description": "Name of dictionary to use."
					}
				},
				"cSpell.dictionaryDefinitions": {
					"type": "array",
					"scope": "resource",
					"description": "A List of Dictionary Definitions.",
					"items": {
						"$ref": "https://raw.githubusercontent.com/streetsidesoftware/cspell/cspell%404.0.53/cspell.schema.json#/definitions/DictionaryDefinition"
					}
				},
				"cSpell.showCommandsInEditorContextMenu": {
					"type": "boolean",
					"scope": "application",
					"description": "Show Spell Checker actions in Editor Context Menu",
					"default": true
				},
				"cSpell.fixSpellingWithRenameProvider": {
					"type": "boolean",
					"scope": "application",
					"description": "Use Rename when fixing spelling issues.",
					"default": true
				},
				"cSpell.logLevel": {
					"type": "string",
					"scope": "window",
					"description": "Set the Debug Level for logging messages.",
					"enum": [
						"None",
						"Error",
						"Warning",
						"Information",
						"Debug"
					],
					"default": "Error"
				},
				"cSpell.allowedSchemas": {
					"type": "array",
					"scope": "window",
					"description": "Control which file schemas will be checked for spelling (VS Code must be restarted for this setting to take effect).",
					"items": {
						"type": "string"
					},
					"default": [
						"file",
						"untitled"
					]
				},
				"cSpell.overrides": {
					"type": "array",
					"description": "Overrides to apply based upon the file path.",
					"items": {
						"$ref": "https://raw.githubusercontent.com/streetsidesoftware/cspell/cspell%404.0.53/cspell.schema.json#/definitions/OverrideSettings"
					}
				}
			}
		}
	},
	"scripts": {
		"clean": "rimraf out",
		"clean-build": "npm run clean && npm run build",
		"build": "webpack --mode none",
		"build-production": "webpack --mode production",
		"build-integration-test": "npm run build && cd ../_integrationTests && npm install && npm run build",
		"lint": "eslint 'src/**'",
		"vscode:prepublish": "npm run clean && npm run build-production",
		"version": "npx vsce package",
		"watch": "npm run build -- watch",
		"test": "jest",
		"test-integration": "cross-env CODE_DISABLE_EXTENSIONS=true CODE_TESTS_PATH=./../_integrationTests/out CODE_TESTS_DATA_DIR=./temp/vscode node ../_integrationTests/integrationTestRunner",
		"test-watch": "jest --watch"
	},
	"devDependencies": {
		"@types/comment-json": "^1.1.1",
		"@types/fs-extra": "^8.1.0",
		"@types/jest": "^25.1.3",
		"@types/kefir": "^3.8.2",
		"@types/node": "^12.12.27",
		"@types/source-map-support": "^0.4.2",
		"@types/vscode": "^1.42.0",
		"@typescript-eslint/eslint-plugin": "^2.20.0",
		"@typescript-eslint/parser": "^2.20.0",
		"cross-env": "^5.2.1",
		"eslint": "^6.8.0",
		"jest": "^25.1.0",
		"lorem-ipsum": "^2.0.3",
		"rimraf": "^3.0.2",
		"source-map-support": "^0.5.16",
		"ts-jest": "^25.2.1",
		"ts-loader": "^6.2.1",
		"typescript": "^3.8.2",
		"webpack": "^4.41.6",
		"webpack-cli": "^3.3.11"
	},
	"dependencies": {
		"comment-json": "^1.1.3",
		"fs-extra": "^8.1.0",
		"kefir": "^3.8.6",
		"node-watch": "^0.6.3",
		"vscode-languageclient": "^6.1.1"
	},
	"__metadata": {
		"id": "f6dbd813-b0a0-42c1-90ea-10dde9d925a7",
		"publisherId": "67600ca7-88fb-4104-9f7e-dd51c00facf2",
		"publisherDisplayName": "Street Side Software"
	}
}