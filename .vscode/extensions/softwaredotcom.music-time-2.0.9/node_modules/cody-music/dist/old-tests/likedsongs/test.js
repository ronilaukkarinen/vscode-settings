"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const expect = require("chai").expect;
const CodyMusic = __importStar(require("../../index"));
const util_1 = require("../util");
const models_1 = require("../../lib/models");
const controller_1 = require("../../lib/controller");
const util_2 = require("../../lib/util");
const testUtil = new util_1.TestUtil();
const musicUtil = new util_2.MusicUtil();
const musicCtr = controller_1.MusicController.getInstance();
describe("spotify liked songs tests", () => {
    before((done) => {
        let configFile = __dirname + "/../config.json";
        let data = testUtil.getJsonFromFile(configFile);
        CodyMusic.setCredentials({
            refreshToken: data.refreshToken,
            clientSecret: data.clientSecret,
            clientId: data.clientId,
            accessToken: data.accessToken,
        });
        done();
    });
    xit("play a set of liked songs", async () => {
        await musicCtr.launchApp(models_1.PlayerName.SpotifyDesktop);
        const devices = await CodyMusic.getSpotifyDevices();
        const device = devices[0];
        const track_ids = [
            "5QLHGv0DfpeXLNFo7SFEy1",
            "5SjLRpgI7LWFzy9ggSqlkO",
            "1MSM3Fo2fvnwVqMcz8Jhjq",
            "7LVHVU3tWfcxj5aiPFEW4Q",
        ];
        const resp = await CodyMusic.play(models_1.PlayerName.SpotifyWeb, {
            track_ids,
            device_id: device.id,
        });
    });
});
