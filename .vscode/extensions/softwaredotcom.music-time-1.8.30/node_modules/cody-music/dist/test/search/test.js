"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const expect = require("chai").expect;
const CodyMusic = __importStar(require("../../index"));
const util_1 = require("../util");
const testUtil = new util_1.TestUtil();
/**
 * Don't add "async" into the it condition.
 * i.e. xit("description text", async (done) => {
 *     // do stuff
 * });
 * It will return the following error if you do.
 * "Error: Resolution method is overspecified. Specify a callback *or* return a Promise; not both."
 */
describe("spotify search tests", () => {
    before(done => {
        let configFile = __dirname + "/../config.json";
        let data = testUtil.getJsonFromFile(configFile);
        CodyMusic.setCredentials({
            refreshToken: data.refreshToken,
            clientSecret: data.clientSecret,
            clientId: data.clientId,
            accessToken: data.accessToken
        });
        done();
    });
    it("search for tracks", async () => {
        let result = await CodyMusic.searchTracks("track:what a time artist:tom", 1);
        expect(result.tracks.items.length).to.not.equal(0);
        result = await CodyMusic.searchTracks("artist:Nicky Jam & Enrique Iglesias track:El Perdón", 1);
        expect(result.tracks.items.length).to.not.equal(0);
        // trying again to show we're using cache
        result = await CodyMusic.searchTracks("artist:Nicky Jam & Enrique Iglesias track:El Perdón", 1);
        expect(result.tracks.items.length).to.not.equal(0);
    });
    xit("search for artists", async () => {
        let result = await CodyMusic.searchArtists("walker", 1);
        expect(result.artists.items.length).to.not.equal(0);
    });
});
